== README
# Flickfeeder
## Git flow: 
0) your local repo should have two remotes:
- heroku -> https://git.heroku.com/flickfeeder.git
- heorku-staging -> https://git.heroku.com/flickfeeder-staging.git
if not add them with `$ git remote add ...`
1) You should have 2 local branches:
- staging
- master
2) make them track their corresponding remotes
- for staging app (i.e. heroku-staging):
on the master branch, type: 
`$ git checkout -b staging --track heroku-staging/master`
Now on "staging" branch, if you type 
`$ git push`
it will push automatically to heroku-staging/masters
- for prod app (i.e. heroku):
on the master branch, type:
`$ git branch --set-upstream-to heroku/master master`
Now on "master" branch, if you type
`$ git push`
it will push automatically to heroku/master
3) branch out on a new branch when working on smg:
- bug/(name) when fixing a bug
- feature/(name) when creating a new feature
4) when done merge to "staging" branch
5) test locally (i.e. http://localhost:3000), if works go to 6)
6) push to staging envrionment (i.e. on heroku-staging/master), if works go to 7
7) merge locally to master and push to production environment (i.e. on heroku/master)

Development: 
- create .env file in your local repo and asks for keys and secrets. At time of writing, you should have the following:
    DROPBOX_KEY=...
    DROPBOX_SECRET=...
    DROPBOX_KEY_DEV=...
    DROPBOX_SECRET_DEV=...
    HOST=...
    
- to test dropbox webhook: 
(on OSX with python installed)
$ python dropbox_hook.py notify http://localhost:<PORT>/dropbox/webhook --secret <DROPBOX_SECRET_DEV> --user 1
